{
	"name": "Blob_to_db",
	"properties": {
		"activities": [
			{
				"name": "Lookup1",
				"type": "Lookup",
				"dependsOn": [],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "AzureSqlSource",
						"queryTimeout": "02:00:00",
						"partitionOption": "None"
					},
					"dataset": {
						"referenceName": "AzureSqlTableMain",
						"type": "DatasetReference",
						"parameters": {
							"SecretKey": "Sqlserver1",
							"SchemaName": "dbo",
							"TableName": "Control_table"
						}
					},
					"firstRowOnly": false
				}
			},
			{
				"name": "ForEach1",
				"type": "ForEach",
				"dependsOn": [
					{
						"activity": "Lookup1",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"items": {
						"value": "@activity('Lookup1').output.value",
						"type": "Expression"
					},
					"batchCount": 1,
					"activities": [
						{
							"name": "Source_to_Stage",
							"type": "Copy",
							"dependsOn": [],
							"policy": {
								"timeout": "0.12:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"source": {
									"type": "DelimitedTextSource",
									"storeSettings": {
										"type": "AzureBlobStorageReadSettings",
										"recursive": true,
										"enablePartitionDiscovery": false
									},
									"formatSettings": {
										"type": "DelimitedTextReadSettings"
									}
								},
								"sink": {
									"type": "AzureSqlSink",
									"preCopyScript": {
										"value": "Truncate table @{item().Destination_Schema_Name}.@{item().Destination_Table_Name}",
										"type": "Expression"
									},
									"writeBehavior": "insert",
									"sqlWriterUseTableLock": false,
									"disableMetricsCollection": false
								},
								"enableStaging": false,
								"translator": {
									"type": "TabularTranslator",
									"typeConversion": true,
									"typeConversionSettings": {
										"allowDataTruncation": true,
										"treatBooleanAsNumber": false
									}
								}
							},
							"inputs": [
								{
									"referenceName": "StorageActMain",
									"type": "DatasetReference",
									"parameters": {
										"StorageActSecretKey": {
											"value": "@item().Source_Secret_Key",
											"type": "Expression"
										},
										"FolderPath": {
											"value": "@item().Source_Folder_Name",
											"type": "Expression"
										},
										"FileName": {
											"value": "@item().Source_File_Name",
											"type": "Expression"
										},
										"ContainerName": {
											"value": "@item().Source_Container_Name",
											"type": "Expression"
										}
									}
								}
							],
							"outputs": [
								{
									"referenceName": "AzureSqlTableMain",
									"type": "DatasetReference",
									"parameters": {
										"SecretKey": {
											"value": "@item().Db_Secret_Key",
											"type": "Expression"
										},
										"SchemaName": {
											"value": "@item().Destination_Schema_Name",
											"type": "Expression"
										},
										"TableName": {
											"value": "@item().Destination_Table_Name",
											"type": "Expression"
										}
									}
								}
							]
						},
						{
							"name": "Stage_to_Table",
							"type": "Script",
							"dependsOn": [
								{
									"activity": "Source_to_Stage",
									"dependencyConditions": [
										"Succeeded"
									]
								}
							],
							"policy": {
								"timeout": "0.12:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"linkedServiceName": {
								"referenceName": "AzureSqlDatabaseMain",
								"type": "LinkedServiceReference",
								"parameters": {
									"SecretKey": {
										"value": "@item().Db_Secret_Key",
										"type": "Expression"
									}
								}
							},
							"typeProperties": {
								"scripts": [
									{
										"type": "Query",
										"text": {
											"value": "Exec @{item().Stage_To_Temp_SP_Name} @{item().Destination_Table_Name},@{item().Destination_Dim_Table_KeyColumn},@{item().Destination_Temp_Table_Name},@{item().Destination_Temp_Table_KeyColumn};",
											"type": "Expression"
										}
									}
								],
								"scriptBlockExecutionTimeout": "02:00:00"
							}
						},
						{
							"name": "Table _to_Dim",
							"type": "Script",
							"dependsOn": [
								{
									"activity": "Stage_to_Table",
									"dependencyConditions": [
										"Succeeded"
									]
								}
							],
							"policy": {
								"timeout": "0.12:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"linkedServiceName": {
								"referenceName": "AzureSqlDatabaseMain",
								"type": "LinkedServiceReference",
								"parameters": {
									"SecretKey": {
										"value": "@item().Db_Secret_Key",
										"type": "Expression"
									}
								}
							},
							"typeProperties": {
								"scripts": [
									{
										"type": "Query",
										"text": {
											"value": "EXEC @{item().Temp_To_Dim_SP_Name} @{item().Destination_Temp_Table_Name}, @{item().Destination_Dim_Table}, '1900-01-01 00:00:00.000';",
											"type": "Expression"
										}
									}
								],
								"scriptBlockExecutionTimeout": "02:00:00"
							}
						},
						{
							"name": "Lookup2",
							"type": "Lookup",
							"dependsOn": [
								{
									"activity": "Table _to_Dim",
									"dependencyConditions": [
										"Succeeded"
									]
								}
							],
							"policy": {
								"timeout": "0.12:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"source": {
									"type": "AzureSqlSource",
									"sqlReaderQuery": {
										"value": "select Max(Updated_on) as Last_Modified from @{item().Destination_Temp_Table_Name}",
										"type": "Expression"
									},
									"queryTimeout": "02:00:00",
									"partitionOption": "None"
								},
								"dataset": {
									"referenceName": "AzureSqlTableMain",
									"type": "DatasetReference",
									"parameters": {
										"SecretKey": {
											"value": "@item().Db_Secret_Key",
											"type": "Expression"
										},
										"SchemaName": {
											"value": "@item().Destination_Schema_Name",
											"type": "Expression"
										},
										"TableName": {
											"value": "@item().Destination_Table_Name",
											"type": "Expression"
										}
									}
								}
							}
						},
						{
							"name": "Script1",
							"type": "Script",
							"dependsOn": [
								{
									"activity": "Lookup2",
									"dependencyConditions": [
										"Succeeded"
									]
								}
							],
							"policy": {
								"timeout": "0.12:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"linkedServiceName": {
								"referenceName": "AzureSqlDatabaseMain",
								"type": "LinkedServiceReference",
								"parameters": {
									"SecretKey": "Sqlserver1"
								}
							},
							"typeProperties": {
								"scripts": [
									{
										"type": "Query",
										"text": {
											"value": "Update [dbo].[Control_table]\nset Delta_Watermark = @{activity('Lookup2').output.firstRow.Last_Modified}\nwhere id = @{item().Id}",
											"type": "Expression"
										}
									}
								],
								"scriptBlockExecutionTimeout": "02:00:00"
							}
						}
					]
				}
			}
		],
		"folder": {
			"name": "Assignments"
		},
		"annotations": []
	}
}