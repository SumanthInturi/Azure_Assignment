{
	"name": "dataflow_Formatters",
	"properties": {
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "Json1",
						"type": "DatasetReference"
					},
					"name": "source1"
				},
				{
					"dataset": {
						"referenceName": "Json1",
						"type": "DatasetReference"
					},
					"name": "source2"
				}
			],
			"sinks": [
				{
					"dataset": {
						"referenceName": "DelimitedText5",
						"type": "DatasetReference"
					},
					"name": "sink1",
					"rejectedDataLinkedService": {
						"referenceName": "AzureBlobStorage6",
						"type": "LinkedServiceReference"
					}
				},
				{
					"dataset": {
						"referenceName": "DelimitedText4",
						"type": "DatasetReference"
					},
					"name": "sink2"
				}
			],
			"transformations": [
				{
					"name": "stringify1"
				},
				{
					"name": "derivedColumn1"
				},
				{
					"name": "flatten1"
				},
				{
					"name": "select1"
				},
				{
					"name": "parse2"
				}
			],
			"scriptLines": [
				"source(output(",
				"          ID as short,",
				"          Projects as string[],",
				"          contact as (landline as string, phone_number as long),",
				"          name as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false,",
				"     documentForm: 'arrayOfDocuments') ~> source1",
				"source(output(",
				"          ID as short,",
				"          Projects as string[],",
				"          contact as (landline as string, {phone number} as long),",
				"          name as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false,",
				"     documentForm: 'arrayOfDocuments') ~> source2",
				"source1 stringify(ContactObjects = contact ? string,",
				"     format: 'json') ~> stringify1",
				"stringify1 derive(ContactObjects = toString(ContactObjects)) ~> derivedColumn1",
				"source2 foldDown(unroll(Projects),",
				"     mapColumn(",
				"          ID,",
				"          name,",
				"          Projects",
				"     ),",
				"     skipDuplicateMapInputs: false,",
				"     skipDuplicateMapOutputs: false) ~> flatten1",
				"derivedColumn1 select(mapColumn(",
				"          ID,",
				"          name,",
				"          ContactObjects",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> select1",
				"select1 parse(Contact = ContactObjects ? (landline as string,",
				"          phone_number as string),",
				"     format: 'json',",
				"     documentForm: 'singleDocument') ~> parse2",
				"parse2 sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     partitionFileNames:['OutputJsonFile.csv'],",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true,",
				"     partitionBy('hash', 1)) ~> sink1",
				"flatten1 sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     input(",
				"          PO as string,",
				"          Vender as string,",
				"          Apple as string,",
				"          Mangoo as string",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> sink2"
			]
		}
	}
}