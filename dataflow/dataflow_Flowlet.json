{
	"name": "dataflow_Flowlet",
	"properties": {
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "DelimitedText3",
						"type": "DatasetReference"
					},
					"name": "source1"
				}
			],
			"sinks": [
				{
					"dataset": {
						"referenceName": "DelimitedText3",
						"type": "DatasetReference"
					},
					"name": "sink1",
					"rejectedDataLinkedService": {
						"referenceName": "AzureBlobStorage6",
						"type": "LinkedServiceReference"
					}
				}
			],
			"transformations": [
				{
					"name": "flowlet1",
					"flowlet": {
						"referenceName": "flowlet31",
						"type": "DataFlowReference"
					}
				}
			],
			"scriptLines": [
				"source(output(",
				"          ID as string,",
				"          Date as string,",
				"          FirstName as string,",
				"          LastName as string,",
				"          Address as string,",
				"          phonenumber as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false) ~> source1",
				"source1 compose(mapColumn(",
				"          ID,",
				"          Date,",
				"          FirstName,",
				"          LastName,",
				"          Address,",
				"          phonenumber",
				"     ),",
				"     composition: 'flowlet31') ~> flowlet1@(output1)",
				"flowlet1@output1 sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     input(",
				"          ID as string,",
				"          Date as string,",
				"          FirstName as string,",
				"          LastName as string,",
				"          Address as string,",
				"          phonenumber as string",
				"     ),",
				"     partitionFileNames:['Outputfile.csv'],",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true,",
				"     mapColumn(",
				"          ID,",
				"          Date,",
				"          FirstName,",
				"          LastName,",
				"          Address,",
				"          phonenumber",
				"     ),",
				"     partitionBy('hash', 1)) ~> sink1"
			]
		}
	}
}